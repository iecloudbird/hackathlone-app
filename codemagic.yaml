workflows:
  hackathlone-workflow:
    name: HackAthlone Build
    max_build_duration: 60
    instance_type: mac_mini_m2
    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        SUPABASE_URL: $SUPABASE_URL
        SUPABASE_ANON_KEY: $SUPABASE_ANON_KEY
        # Base64 encoded google-services.json content
        GOOGLE_SERVICES_JSON: $GOOGLE_SERVICES_JSON
        # Add these for iOS signing/publishing (values from your App Store Connect API key)
        APP_STORE_CONNECT_PRIVATE_KEY: $APP_STORE_CONNECT_PRIVATE_KEY
        APP_STORE_CONNECT_KEY_IDENTIFIER: $APP_STORE_CONNECT_KEY_IDENTIFIER
        APP_STORE_CONNECT_ISSUER_ID: $APP_STORE_CONNECT_ISSUER_ID
        # Add these for Android signing if needed
        # ANDROID_KEYSTORE: $ANDROID_KEYSTORE (base64)
        # ANDROID_KEYSTORE_PASSWORD: $ANDROID_KEYSTORE_PASSWORD
        # ANDROID_KEY_ALIAS: $ANDROID_KEY_ALIAS
        # ANDROID_KEY_PASSWORD: $ANDROID_KEY_PASSWORD

    scripts:
      - name: Get Flutter packages
        script: flutter packages get

      - name: Setup Firebase configuration
        script: |
          echo "üî• Creating google-services.json for Android..."
          mkdir -p android/app
          cat > android/app/google-services.json << 'EOF'
          {
            "project_info": {
              "project_number": "1005959368725",
              "project_id": "hackathlone-app",
              "storage_bucket": "hackathlone-app.firebasestorage.app"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "1:1005959368725:android:864d092dff42fbfa65fe1c",
                  "android_client_info": {
                    "package_name": "com.hackathlone.hackathlone_app"
                  }
                },
                "oauth_client": [],
                "api_key": [
                  {
                    "current_key": "AIzaSyDeS1vyZXnUhL8Av99AB_bxFsEmTIi0bAc"
                  }
                ],
                "services": {
                  "appinvite_service": {
                    "other_platform_oauth_client": []
                  }
                }
              }
            ],
            "configuration_version": "1"
          }
          EOF
          echo "‚úÖ google-services.json created successfully"
          ls -la android/app/google-services.json

      - name: Generate code (Hive adapters)
        script: |
          chmod +x scripts/ci/generate.sh
          scripts/ci/generate.sh

      - name: Flutter analyze
        script: flutter analyze --no-fatal-infos

      - name: Flutter test
        script: flutter test
        ignore_failure: true

      - name: Build APK
        script: |
          # Optional: Decode keystore if using base64 env var
          # if [ -n "$ANDROID_KEYSTORE" ]; then
          #   echo $ANDROID_KEYSTORE | base64 -d > android/app/release.keystore
          # fi
          flutter build apk --release --no-obfuscate --no-shrink

      - name: Build and Sign iOS IPA
        script: |
          if [ "$CM_BRANCH" = "main" ]; then
            echo "üì¶ Running pod install..."
            cd ios
            pod install
            cd ..
            
            echo "üîë Setting up code signing..."
            keychain initialize
            app-store-connect fetch-signing-files "com.hackathlone.hackathlone_app" --type ios_appstore --create
            keychain add-certificates
            xcode-project use-profiles
            
            echo "üì± Building signed iOS IPA..."
            flutter build ipa --release --verbose || { echo "‚ùå IPA build failed‚Äîcheck logs above."; exit 1; }
          else
            echo "Skipping iOS build for non-main branch"
          fi

    artifacts:
      - build/**/outputs/**/*.apk
      - build/ios/ipa/*.ipa

    publishing:
      email:
        recipients:
          - sheanhans03@gmail.com
        notify:
          success: true
          failure: true
      # app_store_connect:
      #   api_key: $APP_STORE_CONNECT_PRIVATE_KEY
      #   key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
      #   issuer_id: $APP_STORE_CONNECT_ISSUER_ID
      #   submit_to_testflight: true
      # submit_to_app_store: false  # Uncomment and set to true for full App Store release later
      # beta_groups:  # Optional: Add your TestFlight beta group names here for auto-distribution
      #   - "Beta Testers Group 1"
      #   - "Beta Testers Group 2"
